<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.yeye.ohmykids.notice.dao.VoteDAO">
 	<insert id="insertVote" parameterType="map">
 		INSERT INTO 
 			`notice_type_vote`
 		(
 			`postType`
 			, `userId`
 			, `userName`
 			, `userType`
 			, `kidsClass`
 			, `noticeType`
 			, `weather`
 			, `title`
 			, `description`
 			, `endDate`
 			, `createdAt`
 			, `updatedAt`
 		)
 		VALUES
 		(
 			#{postType}
 			, #{userId}
 			, #{userName}
 			, #{userType}
 			, #{kidsClass}
 			, #{noticeType}
 			, #{weather}
 			, #{title}
 			, #{description}
 			, #{endDate}
 			, now()
 			, now()
 		)
 	</insert>
 	<select id="selectVoteList" resultType="com.yeye.ohmykids.notice.model.Vote">
 		SELECT
 			`id`
 			, `postType`
 			, `userId`
 			, `userName`
 			, `userType`
 			, `kidsClass`
 			, `noticeType`
 			, `weather`
 			, `title`
 			, `description`
 			, `endDate`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`notice_type_vote`
 		ORDER BY `id` DESC
 	</select>
 	<select id="selectVote" resultType="com.yeye.ohmykids.notice.model.Vote">
 		SELECT
 			`id`
 			, `postType`
 			, `userId`
 			, `userName`
 			, `userType`
 			, `kidsClass`
 			, `noticeType`
 			, `weather`
 			, `title`
 			, `description`
 			, `endDate`
 			, `createdAt`
 			, `updatedAt`
 		FROM
 			`notice_type_vote`
 		WHERE `id` = #{id}
 	</select>
 	<update id="updateVote" parameterType="map">
 		UPDATE
 			`notice_type_vote`
 		SET
 			`kidsClass` = #{kidsClass}
 			, `title` = #{title}
			, `description` = #{description}
			, `endDate` = #{endDate} 			 
 		WHERE
 			`id` = #{id}
 	</update>
 	<delete id="deleteVote" parameterType="map">
 		DELETE FROM
 			`notice_type_vote`
 		WHERE
 			`id` = #{id}
 			AND
 			`userId` = #{userId}
 	</delete>
 	<!-- 투표(찬성)했는지 -->
 	<select id="selectCountAgree" parameterType="map" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`vote_agree`
 		WHERE
 			`userId` = #{userId}
 			AND
 			`voteId` = #{voteId}
 	</select>
 	<!-- 투표(반대)했는지 -->
 	<select id="selectCountDisagree" parameterType="map" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`vote_disagree`
 		WHERE
 			`userId` = #{userId}
 			AND
 			`voteId` = #{voteId}
 	</select>
 	<!-- 찬성입력 -->
 	<insert id="insertAgree" parameterType="map">
 		INSERT INTO
 			`vote_agree`
 		(
 			`userId`
 			, `voteId`
 			, `createdAt`
 		)
 		VALUES
 		(
 			#{userId}
 			, #{voteId}
 			, now() 
 		)
 	</insert>
 	<!-- 반대입력 -->
 	<insert id="insertDisagree" parameterType="map">
 		INSERT INTO
 			`vote_disagree`
 		(
 			`userId`
 			, `voteId`
 			, `createdAt`
 		)
 		VALUES
 		(
 			#{userId}
 			, #{voteId}
 			, now() 
 		)
 	</insert>
 	<!-- 찬성갯수 -->
 	<select id="countAgree" parameterType="map" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`vote_agree`
 		WHERE
 			`voteId` = #{voteId}
 	</select>
 	<!-- 반대갯수 -->
 	<select id="countDisagree" parameterType="map" resultType="int">
 		SELECT
 			count(*)
 		FROM
 			`vote_disagree`
 		WHERE
 			`voteId` = #{voteId}
 	</select>
 	<!-- 찬성 취소 -->
 	<delete id="deleteAgree" parameterType="map">
 		DELETE FROM `vote_agree`
 		WHERE
 			`voteId` = #{voteId}
 	</delete>
 	<!-- 반대 취소 -->
 	<delete id="deleteDisagree" parameterType="map">
 		DELETE FROM `vote_disagree`
 		WHERE
 			`voteId` = #{voteId}
 	</delete>
 	<!-- 투표 공지 삭제 + 투표 찬성 내용 삭제 -->
 	<delete id="deleteVoteAgree" parameterType="map">
	DELETE FROM `vote_agree`
	WHERE
		`voteId` = #{voteId}
 	</delete>
 	 	<!-- 투표 공지 삭제 + 투표 찬성 내용 삭제 -->
 	<delete id="deleteVoteDisagree" parameterType="map">
	DELETE FROM `vote_disagree`
	WHERE
		`voteId` = #{voteId}
 	</delete>
 </mapper>